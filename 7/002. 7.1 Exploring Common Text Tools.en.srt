1
00:00:07,020 --> 00:00:09,000
- On Linux you will find many tools that

2
00:00:09,000 --> 00:00:11,280
allow you to read a file

3
00:00:11,280 --> 00:00:13,743
or to check contents from a text file.

4
00:00:14,670 --> 00:00:16,950
Let's have a look at some of them.

5
00:00:16,950 --> 00:00:18,783
To start with there is less.

6
00:00:20,053 --> 00:00:23,040
So the big question is, is less more?

7
00:00:23,040 --> 00:00:25,950
Well, more was the original file pager

8
00:00:25,950 --> 00:00:29,730
and less was developed to offer
some more advanced features.

9
00:00:29,730 --> 00:00:33,090
And as a reaction to that,
more was developed a bit more.

10
00:00:33,090 --> 00:00:36,150
But still to do more, you should use less.

11
00:00:36,150 --> 00:00:39,780
In particular, in less you
can easily scroll forwards

12
00:00:39,780 --> 00:00:41,700
as well as backwards in files.

13
00:00:41,700 --> 00:00:42,780
But for some reason,

14
00:00:42,780 --> 00:00:45,633
that functionality has never
been implemented in more.

15
00:00:47,694 --> 00:00:52,694
You can also work with first
and last lines in files.

16
00:00:53,070 --> 00:00:54,600
Head is what you can use to show

17
00:00:54,600 --> 00:00:56,700
the first couple of lines of text files.

18
00:00:56,700 --> 00:00:58,829
By default, if you
don't use any arguments,

19
00:00:58,829 --> 00:01:01,350
it'll show the first 10 lines.

20
00:01:01,350 --> 00:01:04,860
And tail is showing the last 10 lines.

21
00:01:04,860 --> 00:01:07,860
You can use a number
behind these command to

22
00:01:07,860 --> 00:01:11,340
specify any other number of
lines that you want to see.

23
00:01:11,340 --> 00:01:14,490
And before that number
you can put minus N,

24
00:01:14,490 --> 00:01:15,660
but that's optional.

25
00:01:15,660 --> 00:01:18,000
So a head minus N one will work,

26
00:01:18,000 --> 00:01:20,580
but head minus one will also work.

27
00:01:20,580 --> 00:01:21,423
Let me show you.

28
00:01:24,330 --> 00:01:27,757
So I am using head on ETC pass WD,

29
00:01:27,757 --> 00:01:30,392
which is showing the first 10 lines

30
00:01:30,392 --> 00:01:35,070
of ETC pass WD, the user file is.

31
00:01:35,070 --> 00:01:38,790
And if I use head minus
three on ETC pass WD,

32
00:01:38,790 --> 00:01:41,730
well, we see the first three lines only.

33
00:01:41,730 --> 00:01:46,530
And if I change that command
and replace head with tail,

34
00:01:46,530 --> 00:01:49,830
you guess what's going
on, last three lines.

35
00:01:49,830 --> 00:01:53,280
So you can even combine
them if you want to.

36
00:01:53,280 --> 00:01:58,110
If I use tail minus
three, ETC pass WD, pipe,

37
00:01:58,110 --> 00:02:03,110
head minus N one, just to show
you the syntax difference.

38
00:02:04,110 --> 00:02:07,920
We have the first line out
of the last three lines of

39
00:02:07,920 --> 00:02:09,663
ETC pass WD.

40
00:02:09,663 --> 00:02:13,080
What I like about head and
tail is that they are simple.

41
00:02:13,080 --> 00:02:17,700
There are typical Linux
utilities, simple but powerful.

42
00:02:17,700 --> 00:02:20,313
And if you combine them,
you can do a lot with them.

43
00:02:23,190 --> 00:02:25,350
Another useful command is cat.

44
00:02:25,350 --> 00:02:27,720
Cat is also one of the simple commands.

45
00:02:27,720 --> 00:02:30,150
It dumps stack file contents on screen,

46
00:02:30,150 --> 00:02:33,513
and it works pretty well if
your file is not too big.

47
00:02:34,380 --> 00:02:36,900
If you wanna see something
about a layout of a file,

48
00:02:36,900 --> 00:02:38,760
you can use minus uppercase A to

49
00:02:38,760 --> 00:02:41,190
print non printable characters as well.

50
00:02:41,190 --> 00:02:43,383
Or minus B which numbers lines or

51
00:02:43,383 --> 00:02:47,220
minus S to suppress repeated empty lines.

52
00:02:47,220 --> 00:02:49,380
It cleans it up a little bit.

53
00:02:49,380 --> 00:02:51,690
And tac, well, tac is probably one of

54
00:02:51,690 --> 00:02:53,850
the most useless commands on Linux.

55
00:02:53,850 --> 00:02:56,730
It's doing the same, but in reverse order.

56
00:02:56,730 --> 00:02:58,687
Somebody at some point in time thought,

57
00:02:58,687 --> 00:02:59,797
"Hey, let me have fun.

58
00:02:59,797 --> 00:03:02,250
"And let's program cat
the other way around."

59
00:03:02,250 --> 00:03:04,740
And that's what resulted in tac.

60
00:03:04,740 --> 00:03:06,300
Is there anyone using it?

61
00:03:06,300 --> 00:03:08,940
I don't know, but let's check out cat.

62
00:03:08,940 --> 00:03:10,203
Cat is useful enough.

63
00:03:13,350 --> 00:03:17,340
So let me use cat minus A on ETC hosts,

64
00:03:17,340 --> 00:03:18,690
which is doing what?

65
00:03:18,690 --> 00:03:20,520
Well, do you see these dollar signs?

66
00:03:20,520 --> 00:03:23,940
These dollar signs are the
non printable characters.

67
00:03:23,940 --> 00:03:27,816
So this minus A option in fact
can be very, very useful to

68
00:03:27,816 --> 00:03:31,623
find if there are any
unexpected characters in a file.

69
00:03:33,420 --> 00:03:35,430
Or cat minus AB,

70
00:03:35,430 --> 00:03:38,070
which is showing line numbers as well.

71
00:03:38,070 --> 00:03:40,470
And minus S, does that
make sense in this case?

72
00:03:40,470 --> 00:03:44,430
Well, not really, because
there's no empty lines, but hey,

73
00:03:44,430 --> 00:03:47,430
let's have a look at tac ETC host.

74
00:03:47,430 --> 00:03:48,960
Do you see how cool it is?

75
00:03:48,960 --> 00:03:50,430
Opposite order.

76
00:03:50,430 --> 00:03:52,503
Once more, let's get back to the slides.

77
00:03:55,440 --> 00:03:57,960
There is a few other tools
that we need to talk about

78
00:03:57,960 --> 00:04:02,100
like cut and sort and
tr, and you know what?

79
00:04:02,100 --> 00:04:03,510
I'm just going to demonstrate

80
00:04:03,510 --> 00:04:05,190
the demos that you can see on the slide

81
00:04:05,190 --> 00:04:06,330
so that we can analyze

82
00:04:06,330 --> 00:04:08,763
and try to understand what is going on.

83
00:04:11,490 --> 00:04:15,600
So let's start with cat minus D column.

84
00:04:15,600 --> 00:04:17,867
Minus D in cut is a delimiter.

85
00:04:17,867 --> 00:04:19,860
It's a field separator,

86
00:04:19,860 --> 00:04:22,499
because if you are going
to address fields like,

87
00:04:22,499 --> 00:04:25,800
like you do with a cat utility,

88
00:04:25,800 --> 00:04:29,190
you need to tell cat how it
can recognize the fields.

89
00:04:29,190 --> 00:04:30,577
So here we say, "Hey, cat,

90
00:04:30,577 --> 00:04:32,827
"fields are recognized by a column and

91
00:04:32,827 --> 00:04:34,380
"I only see field one."

92
00:04:34,380 --> 00:04:35,370
And there we go.

93
00:04:35,370 --> 00:04:37,440
The first field.

94
00:04:37,440 --> 00:04:39,240
Now this is an unsorted list.

95
00:04:39,240 --> 00:04:42,750
If you want to sort it, pipe it to sort.

96
00:04:42,750 --> 00:04:44,178
The sort command itself has

97
00:04:44,178 --> 00:04:46,890
options to filter out columns as well.

98
00:04:46,890 --> 00:04:48,420
I like to use them in a pipe.

99
00:04:48,420 --> 00:04:51,030
Keep it simple so that
you don't have to memorize

100
00:04:51,030 --> 00:04:53,040
all of these options.

101
00:04:53,040 --> 00:04:55,860
A little bit different is the tr command.

102
00:04:55,860 --> 00:04:57,990
The tr translates.

103
00:04:57,990 --> 00:05:00,630
Well, can you really call it translate?

104
00:05:00,630 --> 00:05:01,530
Let's have a look.

105
00:05:01,530 --> 00:05:05,800
If I use echo, hello, pipe tr, AZ, AZ.

106
00:05:09,390 --> 00:05:11,580
Then we get hello in uppercase.

107
00:05:11,580 --> 00:05:13,890
If you want to do it a
nice way, you better use

108
00:05:13,890 --> 00:05:17,580
colon lower colon between square brackets,

109
00:05:17,580 --> 00:05:22,580
and colon upper colon, also
between square brackets.

110
00:05:23,100 --> 00:05:24,360
And that's doing the same.

111
00:05:24,360 --> 00:05:26,760
Now, why is this better
for languages that have

112
00:05:26,760 --> 00:05:30,542
special characters in file names?

113
00:05:30,542 --> 00:05:32,880
AZ, AZ, this works for ASCII.

114
00:05:32,880 --> 00:05:34,590
This works for anything.

115
00:05:34,590 --> 00:05:37,380
Hey, there's one little thing
that I want to show you.

116
00:05:37,380 --> 00:05:42,380
Let's do tr A L M Z, which is doing what?

117
00:05:43,770 --> 00:05:48,770
Hey, it's transcribing the
contents of this hello string.

118
00:05:48,930 --> 00:05:52,680
Also something that you
can do with a tr utility.

119
00:05:52,680 --> 00:05:55,650
You'll notice that tr is
particularly useful in scripts.

120
00:05:55,650 --> 00:05:58,710
If you wanna make sure that
the case you are getting is

121
00:05:58,710 --> 00:06:00,993
either in uppercase or in lowercase.
