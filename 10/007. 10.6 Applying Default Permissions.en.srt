1
00:00:06,780 --> 00:00:07,613
- In this video,

2
00:00:07,613 --> 00:00:10,740
I will tell you how to
apply default permissions.

3
00:00:10,740 --> 00:00:13,140
So, in order to understand
default permissions,

4
00:00:13,140 --> 00:00:14,918
we need the umask.

5
00:00:14,918 --> 00:00:16,380
The umask is a shell setting

6
00:00:16,380 --> 00:00:19,680
that subtracts the umask
from default permissions.

7
00:00:19,680 --> 00:00:22,530
The default is set in etc/bashrc.

8
00:00:22,530 --> 00:00:25,830
And if you want to set a
specific umask for a user,

9
00:00:25,830 --> 00:00:28,890
you can always put that
in the .bashrc file

10
00:00:28,890 --> 00:00:30,423
in the user home directory.

11
00:00:31,350 --> 00:00:33,450
Now, in order to understand the umask,

12
00:00:33,450 --> 00:00:35,070
you should know that default permissions

13
00:00:35,070 --> 00:00:40,070
for files are 666, and
for directories are 777.

14
00:00:40,230 --> 00:00:41,490
So how does that work?

15
00:00:41,490 --> 00:00:45,660
Well, let's imagine that
you have a umask of 027.

16
00:00:45,660 --> 00:00:47,280
Now, you do the subtraction.

17
00:00:47,280 --> 00:00:52,280
027 on 666, means that
you have 640 remaining.

18
00:00:54,870 --> 00:00:58,380
Because six minus zero is still six.

19
00:00:58,380 --> 00:01:00,210
Six minus two is four.

20
00:01:00,210 --> 00:01:02,850
And six minus seven, well,
that will be minus one,

21
00:01:02,850 --> 00:01:04,410
but we can't do minus.

22
00:01:04,410 --> 00:01:07,143
So zero will be the remaining thing.

23
00:01:08,130 --> 00:01:11,970
On directories, default
permissions are set to 777.

24
00:01:11,970 --> 00:01:13,860
And in case you are wondering why,

25
00:01:13,860 --> 00:01:15,930
well, the difference between
the six and the seven

26
00:01:15,930 --> 00:01:17,760
is the execute permission.

27
00:01:17,760 --> 00:01:20,040
And on directories, to do
something that is useful,

28
00:01:20,040 --> 00:01:22,740
you always need execute permission.

29
00:01:22,740 --> 00:01:27,600
So 027 on the directory
will result in 750,

30
00:01:27,600 --> 00:01:30,900
so that the user can do
anything, the group can read,

31
00:01:30,900 --> 00:01:33,003
and others can do nothing at all.

32
00:01:34,260 --> 00:01:36,393
Let me show you how this umask works.

33
00:01:39,870 --> 00:01:43,440
So the nice thing about umask
is that it is a shell setting.

34
00:01:43,440 --> 00:01:47,070
So I'm typing umask, and here
we can see the current umask.

35
00:01:47,070 --> 00:01:49,740
As you can see, it's a four digit umask.

36
00:01:49,740 --> 00:01:51,840
Please ignore the first digit

37
00:01:51,840 --> 00:01:54,000
because that relates to
the special permissions

38
00:01:54,000 --> 00:01:55,380
that we just talked about,

39
00:01:55,380 --> 00:01:57,360
and you will never ever change it.

40
00:01:57,360 --> 00:02:01,590
So, let's just consider this to be 022.

41
00:02:01,590 --> 00:02:02,820
Now, what is the result?

42
00:02:02,820 --> 00:02:07,110
The result is that if
Linda creates a file,

43
00:02:07,110 --> 00:02:10,350
the permissions are set to
read, write, read, read.

44
00:02:10,350 --> 00:02:15,180
Now I am going to change that umask 027.

45
00:02:15,180 --> 00:02:17,400
And now if I type umask again,

46
00:02:17,400 --> 00:02:21,270
we can see that it's
automatically applied to 027.

47
00:02:21,270 --> 00:02:24,540
And if Linda creates another file,

48
00:02:24,540 --> 00:02:28,470
then this other file has the
new permissions assigned.

49
00:02:28,470 --> 00:02:30,090
Now, I just typed it in a shell

50
00:02:30,090 --> 00:02:31,860
and it makes it nonpersistent.

51
00:02:31,860 --> 00:02:33,510
You want it to be persistent.

52
00:02:33,510 --> 00:02:36,363
You need to put it in the .bashrc.

53
00:02:37,290 --> 00:02:41,880
And in the .bashrc, you can see
that this is a shell script,

54
00:02:41,880 --> 00:02:44,910
but if you put it somewhere near the end

55
00:02:44,910 --> 00:02:47,520
of the shell script, then
there's nothing wrong with it.

56
00:02:47,520 --> 00:02:51,960
So if I use umask 077,

57
00:02:51,960 --> 00:02:54,600
that's something that the user can do.

58
00:02:54,600 --> 00:02:59,010
Then, at the moment that the
user is opening a new shell

59
00:02:59,010 --> 00:03:04,010
or logging in again, then the
new umask will be applied.

60
00:03:04,110 --> 00:03:06,450
A quick trick to activate these settings

61
00:03:06,450 --> 00:03:10,683
is by sourcing it using .space.bashrc.

62
00:03:11,580 --> 00:03:13,590
The dot command is a source command,

63
00:03:13,590 --> 00:03:15,870
and that'll make sure that its settings

64
00:03:15,870 --> 00:03:17,310
are applied immediately.

65
00:03:17,310 --> 00:03:20,820
As you can see right now, it's 077.

66
00:03:20,820 --> 00:03:22,230
And that ensures that everything

67
00:03:22,230 --> 00:03:25,050
that user Linda is creating
is visible for you.

68
00:03:25,050 --> 00:03:26,400
So Linda only.

69
00:03:26,400 --> 00:03:28,143
That's how you can use the umask.
